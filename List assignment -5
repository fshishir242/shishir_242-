{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPLow/O9k1PA2KNaUjQj/W9"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"muDO4kXPSqdi","executionInfo":{"status":"ok","timestamp":1679072552283,"user_tz":-360,"elapsed":14372,"user":{"displayName":"Farhad Hossain Shishir","userId":"13611435287484090872"}},"outputId":"8ec68936-4727-4912-b660-c3ae1dacb758"},"outputs":[{"output_type":"stream","name":"stdout","text":["Enter:1\n","[1]\n","Enter:2\n","[1, 2]\n","Enter:3\n","[1, 2, 3]\n","Enter:4\n","[1, 2, 3, 4]\n","Enter:5\n","[1, 2, 3, 4, 5]\n"]}],"source":["#Task -1\n","list=[]\n","for i in range(5):\n","  num=int(input(\"Enter:\"))\n","  list.append(num)\n","  print(list)\n"]},{"cell_type":"code","source":["x=input()\n","l=[]\n","b=\"\"\n","for i in x:\n","  if i!=\" \"and i!=\",\":\n","    b+=i\n","  else:\n","    l.append(int(b))\n","    b=\"\"\n","print(l)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NJgqd-82Gmrc","executionInfo":{"status":"ok","timestamp":1679468362454,"user_tz":-360,"elapsed":5441,"user":{"displayName":"Farhad Hossain Shishir","userId":"13611435287484090872"}},"outputId":"754b39d7-e335-41d0-c355-cd7d0051509e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1,2,3\n","[1, 2]\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"-BfFm_pzLZwH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Task-6\n","a=input()\n","a=a.split(\",\")\n","print(a)\n","l=[]\n","for i in a:\n","  l.append(int(i))\n","print(l)\n","max=l[0] #max=1\n","min=l[0] #min=1\n","for j in range(1,len(l)):\n","  if max<l[j]:\n","    max=l[j]\n","  if min>l[j]:\n","    min=l[j]\n","print(max,min,l.index(max))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dykbyywBhlkV","executionInfo":{"status":"ok","timestamp":1679073643095,"user_tz":-360,"elapsed":9652,"user":{"displayName":"Farhad Hossain Shishir","userId":"13611435287484090872"}},"outputId":"8f147c8b-83df-458f-a532-6a86b16abc5e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1,2,3,4,5,6,7\n","['1', '2', '3', '4', '5', '6', '7']\n","[1, 2, 3, 4, 5, 6, 7]\n","7 1 6\n"]}]},{"cell_type":"code","source":["#1\n","l=[]\n","for i in range(5):\n","  x=input(f\"Numbers in the list: \")\n","  l.append(x)\n","  print(l)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JoxV-IXLRXbF","executionInfo":{"status":"ok","timestamp":1679421152973,"user_tz":-360,"elapsed":43955,"user":{"displayName":"Farhad Hossain Shishir","userId":"13611435287484090872"}},"outputId":"5c0d5675-0e82-42ab-e7df-771095ce419a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Numbers in the list: 3\n","['3']\n","Numbers in the list: 4\n","['3', '4']\n","Numbers in the list: 34\n","['3', '4', '34']\n","Numbers in the list: -10\n","['3', '4', '34', '-10']\n","Numbers in the list: 0\n","['3', '4', '34', '-10', '0']\n"]}]},{"cell_type":"code","source":["#2\n","x=input()\n","l=[]\n","b=\"\"\n","for i in range(len(x)):\n","  if x[i]!=\",\" and x[i]!=\" \":\n","    b+=x[i]\n","  else:\n","    l.append(int(b))\n","    b=\"\"\n","l.append(int(b))\n","if len(x)>=4:\n","  print(l[2:-2])\n","else:\n","  print(\"Not possible\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2K5jLk5-TVXP","executionInfo":{"status":"ok","timestamp":1679468859294,"user_tz":-360,"elapsed":4880,"user":{"displayName":"Farhad Hossain Shishir","userId":"13611435287484090872"}},"outputId":"74d6a0b5-92d3-416d-8f12-21a581c23106"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1,2,3,4,5\n","[3]\n"]}]},{"cell_type":"code","source":["#2\n","x=input().split(\",\")\n","if len(x)>4:\n","    print(l[2:-2])\n","elif len(x)==4:\n","    print([])\n","else:\n","    print(\"Not possible\")"],"metadata":{"id":"TVLw2FRqIy5Z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1679469107206,"user_tz":-360,"elapsed":5641,"user":{"displayName":"Farhad Hossain Shishir","userId":"13611435287484090872"}},"outputId":"0f8908bb-9e91-4444-bbc7-79c48ac1ffbd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1,2,3\n","Not possible\n"]}]},{"cell_type":"code","source":["#6\n","x=input()\n","l=[]\n","b=''\n","for i in x:\n","  if i!=' 'and i!=',':\n","    b+=i\n","  else:\n","    l.append(int(b))\n","    b=''\n","l.append(int(b))\n","print(l)\n","max=l[0]\n","for i in range(len(l)):\n","  if max<l[i]:\n","    max=l[i]\n","    index=i\n","print(max,i)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lqPiVeZlKumk","executionInfo":{"status":"ok","timestamp":1679469621363,"user_tz":-360,"elapsed":11348,"user":{"displayName":"Farhad Hossain Shishir","userId":"13611435287484090872"}},"outputId":"5d3ae423-70bc-4ee1-bb97-d1e637be7488"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1,2,3,4\n","[1, 2, 3, 4]\n","4 3\n"]}]},{"cell_type":"code","source":["#9\n","x= input()\n","l=[]\n","b=\"\"\n","for i in x:\n","  if i!=\" \":\n","    b+=i\n","  else:\n","    l.append(int(b))\n","    b=\"\"\n","l.append(int(b))\n","print(l)\n","li=[]\n","for j in l:\n","  if j%2==0:\n","    continue\n","  else:\n","    li.append(j)\n","print(l)\n","print(li)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x9c-JaB7MXV5","executionInfo":{"status":"ok","timestamp":1679470195663,"user_tz":-360,"elapsed":7458,"user":{"displayName":"Farhad Hossain Shishir","userId":"13611435287484090872"}},"outputId":"d116d2e5-5656-4495-b452-fc2c4a7972ce"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 2 3 4 5\n","[1, 2, 3, 4, 5]\n","[1, 2, 3, 4, 5]\n","[1, 3, 5]\n"]}]},{"cell_type":"code","source":["#10\n","x=input()\n","l=[]\n","b=\"\"\n","t=[]\n","for i in x:\n","  if i!=\",\" and i!=\" \":\n"," \n","    l.append(i)\n","for j in l:\n","\n"," if i!=b:\n","  t.append(j)\n","print(t)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5MhyOqdeOYk7","executionInfo":{"status":"ok","timestamp":1679471036433,"user_tz":-360,"elapsed":8356,"user":{"displayName":"Farhad Hossain Shishir","userId":"13611435287484090872"}},"outputId":"536f51f8-cb1c-4d5b-ac2b-b3a9ef29e1c4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1,1,1,22,33,22\n","['1', '1', '1', '2', '2', '3', '3', '2', '2']\n"]}]},{"cell_type":"code","source":["x=input().split(\",\")\n","for i in x:\n","  l.append(i)\n","print(l)"],"metadata":{"id":"7hZYgs9BcD_j"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#hard Task-6\n","x=input()\n","l=[]\n","b=''\n","#clean data\n","for i in x:\n","  if i!=\",\":\n","    b+=i\n","  else:\n","    l.append(int(b))\n","    b=''\n","l.append(int(b))\n","print(f\"Data after cleaning: {l}\")\n","#valid ,invalid and duplicate\n","valid_count=0\n","invalid_count=0\n","duplicate_count=0\n","t=[]\n","vl=[]\n","ivl=[]\n","\n","for i in l:\n","  if 4<=len(str(i))<=6:\n","      if i not in vl:\n","        valid_count+=1\n","        vl.append(i)\n","      elif i in vl:\n","        duplicate_count+=1\n","        t.append(i)\n","      \n","  else:\n","    invalid_count+=1\n","    ivl.append(i)\n","\n","print(f\"Total number percent in the given string: {len(l)}\")\n","print(f\"Valid number count: {valid_count}\")\n","print(f\"Valid numbers in list: {vl}\")\n","print(f\"Invalid number count: {invalid_count}\")\n","print(f\"invalid numbers in list: {ivl}\")\n","print(f\"Dupicate number count: {duplicate_count}\")\n","#percentage of valid , invalid and duplicate numbers\n","print(f\"Valid number percentage(%): {len(vl)*100/len(l)}\")\n","print(f\"Invalid number percentage(%): {len(ivl)*100/len(l)}\")\n","print(f\"Duplicate number percentage(%): {len(t)*100/len(l)}\")\n","#Number,sum of digits,product of digits\n","sum=0\n","pro=1\n","d=[]\n","nd=[]\n","for i in vl:\n","  for j in str(i):\n","    sum+=int(j)\n","    pro*=int(j)\n","    d.append(i)\n","    d.append(sum)\n","    d.append(pro)\n","nd.append(d)\n","print(f\"Data of valid numbers: {nd}\")\n","\n"],"metadata":{"id":"l-dRo73Wus61"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"n2aXEBLX5qtn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#\n","x=input()\n","l=[]\n","b=\"\"\n","#clean data\n","for i in x:\n","  if i!=\",\" and i!=\" \":\n","    b+=i\n","  else:\n","    l.append(int(b))\n","    b=\"\"\n","l.append(int(b))\n","print(f\"Data after cleaning: {l}\")"],"metadata":{"id":"lHfL06BH2wTQ"},"execution_count":null,"outputs":[]}]}